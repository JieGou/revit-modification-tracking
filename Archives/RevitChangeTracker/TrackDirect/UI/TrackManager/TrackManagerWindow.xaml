<Window
    x:Class="TrackDirect.UI.TrackManagerWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dw="clr-namespace:DrWPF.Windows.Controls"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:TrackDirect.UI"
    x:Name="Win"
    Title="Data changes Manager"
    Width="550"
    Height="750"
    FontSize="12"
    ResizeMode="CanResizeWithGrip"
    WindowStartupLocation="Manual">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding TrackManagerWindowLoaded}" CommandParameter="{Binding ElementName=Win}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding TrackManagerWindowClosed}" CommandParameter="{Binding ElementName=Win}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <ResourceDictionary>
            <!--  Load this specific theme because the Aero theme for CheckBox has issues.  -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/PresentationFramework.Royale;V3.0.0.0;31bf3856ad364e35;component\themes\royale.normalcolor.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--  TreeView style template  -->
            <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                <Setter Property="IsSelected" Value="{Binding IsInitiallySelected, Mode=OneTime}" />
                <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
                <Setter Property="dw:VirtualToggleButton.IsVirtualToggleButton" Value="True" />
                <Setter Property="dw:VirtualToggleButton.IsChecked" Value="{Binding IsChecked}" />
            </Style>
            <!--  Checkbox template  -->
            <HierarchicalDataTemplate x:Key="CheckBoxItemTemplate" ItemsSource="{Binding ChildrenNodes, Mode=OneTime}">
                <StackPanel Orientation="Horizontal">
                    <CheckBox
                        VerticalAlignment="Center"
                        Focusable="False"
                        IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        IsEnabled="{Binding IsEnabled}" />
                    <TextBlock
                        Margin="2,0"
                        Foreground="{Binding TextColor}"
                        Text="{Binding Name, Mode=OneTime}">
                        <TextBlock.ToolTip>
                            <ToolTip>
                                <TextBlock Text="{Binding ToolTip}" />
                            </ToolTip>
                        </TextBlock.ToolTip>
                    </TextBlock>
                </StackPanel>
            </HierarchicalDataTemplate>
            <!--  Button template  -->
            <Style x:Key="btnTemplate" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Background" Value="#FFE6E6E6" />
                <Setter Property="BorderBrush" Value="#cccccc" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="#333333" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="3,3,3,3" />
                <Setter Property="Margin" Value="0,0,0,10" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Width" Value="100" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    Name="Presenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#333333" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#1ba1e2" />
                                    <Setter Property="BorderBrush" Value="#1ba1e2" />
                                    <Setter Property="Foreground" Value="#ffffff" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#FF6BC3EE" />
                                    <Setter Property="BorderBrush" Value="#FF6BC3EE" />
                                    <Setter Property="Foreground" Value="#ffffff" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter TargetName="Chrome" Property="BorderBrush" Value="#1ba1e2" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--  TabItem template  -->
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid>
                                <Border
                                    Name="Border"
                                    BorderBrush="Gray"
                                    BorderThickness="0.5,0.5,0.5,0.5"
                                    CornerRadius="4,4,0,0">
                                    <ContentPresenter
                                        x:Name="ContentSite"
                                        Margin="12,4,12,4"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        ContentSource="Header" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Converter  -->
            <local:ComponentOptionConverter x:Key="OptionConverter" />
        </ResourceDictionary>


    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>
        <TabControl
            x:Name="tabControlManager"
            Margin="5"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="White">
            <TabItem Header="Manage">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="60" />
                        <RowDefinition />
                        <RowDefinition Height="60" />
                    </Grid.RowDefinitions>
                    <Expander Grid.Row="0" Header="Color Element Settings">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="1">
                                <TextBlock
                                    Margin="10,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Text="New Element" />
                                <Button
                                    x:Name="colorPickerNewElement"
                                    Width="16"
                                    Height="16"
                                    Margin="180,0,10,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Background="{Binding BackgroundNewElement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    BorderBrush="{Binding BackgroundNewElement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Command="{Binding ColorSettingsNewElement}"
                                    CommandParameter="{Binding ElementName=colorPickerNewElement}"
                                    Style="{StaticResource btnTemplate}">
                                    <Button.ToolTip>
                                        <ToolTip>
                                            Click me to change color
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                            </Grid>
                            <Grid Grid.Row="2">
                                <TextBlock
                                    Margin="10,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Text="Family Type Change" />
                                <Button
                                    x:Name="colorPickerFamilyChange"
                                    Width="16"
                                    Height="16"
                                    Margin="180,0,10,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Background="{Binding BackgroundFamilyType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    BorderBrush="{Binding BackgroundFamilyType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Command="{Binding ColorSettingsChangeFamilyType}"
                                    CommandParameter="{Binding ElementName=colorPickerFamilyChange}"
                                    Style="{StaticResource btnTemplate}">
                                    <Button.ToolTip>
                                        <ToolTip>
                                            Click me to change color
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                            </Grid>
                            <Grid Grid.Row="3">
                                <TextBlock
                                    Margin="10,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Text="Geometry Or Location Change" />
                                <Button
                                    x:Name="colorPickerGeo"
                                    Width="16"
                                    Height="16"
                                    Margin="180,0,10,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Background="{Binding BackgroundGeometry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    BorderBrush="{Binding BackgroundGeometry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Command="{Binding ColorSettingsChangeGeometry}"
                                    CommandParameter="{Binding ElementName=colorPickerGeo}"
                                    Style="{StaticResource btnTemplate}">
                                    <Button.ToolTip>
                                        <ToolTip>
                                            Click me to change color
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                            </Grid>
                            <Grid Grid.Row="4">
                                <TextBlock
                                    Margin="10,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Text="Revit Parameters Change" />
                                <Button
                                    x:Name="colorPickerRvtPChange"
                                    Width="16"
                                    Height="16"
                                    Margin="180,0,10,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Background="{Binding BackgroundRevitParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    BorderBrush="{Binding BackgroundRevitParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Command="{Binding ColorSettingsChangeRevitParameters}"
                                    CommandParameter="{Binding ElementName=colorPickerRvtPChange}"
                                    Style="{StaticResource btnTemplate}">
                                    <Button.ToolTip>
                                        <ToolTip>
                                            Click me to change color
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                            </Grid>
                            <Grid Grid.Row="5">
                                <TextBlock
                                    Margin="10,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Text="Shared Parameters Change" />
                                <Button
                                    x:Name="colorPickerSPChange"
                                    Width="16"
                                    Height="16"
                                    Margin="180,0,10,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Background="{Binding BackgroundSharedParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    BorderBrush="{Binding BackgroundSharedParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Command="{Binding ColorSettingsChangeSharedParameters}"
                                    CommandParameter="{Binding ElementName=colorPickerSPChange}"
                                    Style="{StaticResource btnTemplate}">
                                    <Button.ToolTip>
                                        <ToolTip>
                                            Click me to change color
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>

                            </Grid>
                        </Grid>
                    </Expander>
                    <GroupBox
                        Grid.Row="1"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Header="Group Elements">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <RadioButton
                                x:Name="radBtnByCategory"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Command="{Binding Path=radBtnByCategory_Checked}"
                                CommandParameter="{Binding ElementName=radBtnByCategory, Path=IsChecked}"
                                Content="By Category"
                                GroupName="GroupElement"
                                IsChecked="True"
                                IsEnabled="True"
                                IsThreeState="False" />
                            <RadioButton
                                x:Name="radBtnByTime"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Command="{Binding Path=radBtnByTime_Checked}"
                                CommandParameter="{Binding ElementName=radBtnByTime, Path=IsChecked}"
                                Content="By Time"
                                GroupName="GroupElement"
                                IsEnabled="True"
                                IsThreeState="False" />
                            <RadioButton
                                x:Name="radBtnByTypeChange"
                                Grid.Column="2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Command="{Binding Path=radBtnByTypeChange_Checked}"
                                CommandParameter="{Binding ElementName=radBtnByTypeChange, Path=IsChecked}"
                                Content="By Type Change"
                                GroupName="GroupElement"
                                IsEnabled="True"
                                IsThreeState="False" />
                        </Grid>
                    </GroupBox>
                    <Grid Grid.Row="2" Grid.ColumnSpan="2">
                        <DockPanel Margin="5">
                            <TreeView
                                x:Name="tree"
                                ItemContainerStyle="{StaticResource TreeViewItemStyle}"
                                ItemTemplate="{StaticResource CheckBoxItemTemplate}"
                                ItemsSource="{Binding TreeElementsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DockPanel>
                    </Grid>
                    <GroupBox
                        Grid.Row="3"
                        Grid.ColumnSpan="2"
                        Margin="5,0,5,5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Header="View Options">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <CheckBox
                                x:Name="checkBoxHighlight"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Command="{Binding HighlightCommand}"
                                Content="Highlight Element"
                                IsChecked="{Binding IsHighlightChecked, Mode=TwoWay}" />
                            <CheckBox
                                x:Name="checkBoxIsolate"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Command="{Binding IsolateCommand}"
                                Content="Isolate Element"
                                IsChecked="{Binding IsIsolateChecked, Mode=TwoWay}" />
                            <CheckBox
                                x:Name="ckxColorElement"
                                Grid.Column="2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Command="{Binding SectionboxCommand}"
                                Content="Color Element"
                                IsChecked="{Binding IsSectionBoxChecked}" />
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>

            <TabItem Header="Remove Color">
                <GroupBox
                    Margin="7"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Header="Remove Color Elements In: ">
                    <Grid>
                        <RadioButton
                            x:Name="radioButtonVisible"
                            Grid.Row="1"
                            Margin="10,10,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Content="Model"
                            GroupName="ElementOption"
                            IsChecked="{Binding Path=SelectedOption, Converter={StaticResource OptionConverter}, ConverterParameter=OnlyVisible}"
                            IsEnabled="{Binding ElementName=radioButtonRevit, Path=IsEnabled}" />
                        <RadioButton
                            x:Name="radBtnViewActive"
                            Grid.Row="1"
                            Margin="10,35,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Content="Active View"
                            GroupName="ElementOption"
                            IsChecked="{Binding Path=SelectedOption, Converter={StaticResource OptionConverter}, ConverterParameter=SelectedElements}"
                            IsEnabled="{Binding ElementName=radioButtonRevit, Path=IsEnabled}" />
                        <RadioButton
                            x:Name="radioButtonSelected"
                            Grid.Row="1"
                            Margin="10,60,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Content="Selected Elements"
                            GroupName="ElementOption"
                            IsChecked="{Binding Path=SelectedOption, Converter={StaticResource OptionConverter}, ConverterParameter=SelectedElements}"
                            IsEnabled="{Binding ElementName=radioButtonRevit, Path=IsEnabled}" />
                        <RadioButton
                            x:Name="radioButtonNone"
                            Grid.Row="1"
                            Margin="10,85,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Content="Only Visible Elements"
                            GroupName="ElementOption"
                            IsChecked="{Binding Path=SelectedOption, Converter={StaticResource OptionConverter}, ConverterParameter=None}"
                            IsEnabled="{Binding ElementName=radioButtonRevit, Path=IsEnabled}" />
                    </Grid>

                </GroupBox>
            </TabItem>
        </TabControl>
        <Button
            x:Name="buttonApply"
            Grid.Row="1"
            Width="75"
            Height="25"
            Margin="10,5,10,10"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Command="{Binding BtnApplyCommand}"
            Content="Apply"
            Style="{StaticResource btnTemplate}" />
        <Button
            x:Name="buttonCancel"
            Grid.Row="1"
            Width="75"
            Height="25"
            Margin="0,5,90,0"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Content="Cancel"
            IsCancel="True"
            Style="{StaticResource btnTemplate}" />

    </Grid>
</Window>