<Window x:Class="TrackDirect.UI.TrackManagerWindow"
        x:Name="Win"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:TrackDirect.UI"
        xmlns:dw="clr-namespace:DrWPF.Windows.Controls"
        FontSize="12"
        Title="Data changes Manager"
        Width="600"
        Height="900"
        WindowStartupLocation="Manual"
        ResizeMode="CanResizeWithGrip">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding TrackManagerWindowLoaded}"
                                   CommandParameter="{Binding ElementName=Win}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding TrackManagerWindowClosed}"
                                   CommandParameter="{Binding ElementName=Win}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <ResourceDictionary>
            <!-- Load this specific theme because the Aero theme for CheckBox has issues. -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/PresentationFramework.Royale;V3.0.0.0;31bf3856ad364e35;component\themes\royale.normalcolor.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- TreeView style template -->
            <Style x:Key="TreeViewItemStyle"
                   TargetType="TreeViewItem">
                <Setter Property="IsExpanded"
                        Value="{Binding IsExpanded}" />
                <Setter Property="IsSelected"
                        Value="{Binding IsInitiallySelected, Mode=OneTime}" />
                <Setter Property="KeyboardNavigation.AcceptsReturn"
                        Value="True" />
                <Setter Property="dw:VirtualToggleButton.IsVirtualToggleButton"
                        Value="True" />
                <Setter Property="dw:VirtualToggleButton.IsChecked"
                        Value="{Binding IsChecked}" />
            </Style>
            <!-- Checkbox template-->
            <HierarchicalDataTemplate x:Key="CheckBoxItemTemplate"
                                      ItemsSource="{Binding Children, Mode=OneTime}">
                <StackPanel Orientation="Horizontal">
                    <CheckBox Focusable="False"
                              IsChecked="{Binding IsChecked}"
                              IsEnabled="{Binding IsEnabled}"
                              VerticalAlignment="Center" />
                    <TextBlock Text="{Binding Name, Mode=OneTime}"
                               Margin="2,0"
                               Foreground="{Binding TextColor}">
                        <TextBlock.ToolTip>
                            <ToolTip>
                                <TextBlock Text="{Binding ToolTip}" />
                            </ToolTip>
                        </TextBlock.ToolTip>
                </TextBlock>
                </StackPanel>
            </HierarchicalDataTemplate>
            <!-- Button template -->
            <Style TargetType="{x:Type Button}"
                   x:Key="btnTemplate">
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="Background"
                        Value="#FFE6E6E6" />
                <Setter Property="BorderBrush"
                        Value="#cccccc" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Foreground"
                        Value="#333333" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Padding"
                        Value="3,3,3,3" />
                <Setter Property="Margin"
                        Value="0 0 0 10">
                </Setter>
                <Setter Property="FontSize"
                        Value="12">
                </Setter>
                <Setter Property="Width"
                        Value="100">
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="Chrome"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter Name="Presenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Foreground"
                                            Value="#333333" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="#1ba1e2" />
                                    <Setter Property="BorderBrush"
                                            Value="#1ba1e2" />
                                    <Setter Property="Foreground"
                                            Value="#ffffff" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="#FF6BC3EE" />
                                    <Setter Property="BorderBrush"
                                            Value="#FF6BC3EE" />
                                    <Setter Property="Foreground"
                                            Value="#ffffff" />
                                </Trigger>
                                <Trigger Property="IsFocused"
                                         Value="true">
                                    <Setter TargetName="Chrome"
                                            Property="BorderBrush"
                                            Value="#1ba1e2" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--TabItem template-->
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid>
                                <Border Name="Border"
                                        BorderBrush="Gray"
                                        BorderThickness="0.5,0.5,0.5,0.5"
                                        CornerRadius="4,4,0,0">
                                    <ContentPresenter x:Name="ContentSite"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
                                                      ContentSource="Header"
                                                      Margin="12,4,12,4" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected"
                                         Value="True">
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="LightGray" />
                                </Trigger>
                                <Trigger Property="IsSelected"
                                         Value="False">
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--Converter-->
            <local:ComponentOptionConverter x:Key="OptionConverter" />
        </ResourceDictionary>
       

    </Window.Resources>
   
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="40"></RowDefinition>
        </Grid.RowDefinitions>
        <TabControl x:Name="tabControlManager"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Margin="5"
                    Background="White">
            <TabItem Header="Manage">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="60"></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition Height="60"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Expander Grid.Row="0"
                              Header="Color Element Settings">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="1">
                                <TextBlock Text="New Element"
                                           HorizontalAlignment="Left"
                                           Margin="10,0,0,0"
                                           VerticalAlignment="Top" />
                                <Button x:Name="colorPickerNewElement"
                                    HorizontalAlignment="Left"
                                        Margin="180,0,10,0"
                                        VerticalAlignment="Top"
                                        Width="16"
                                        Height="16"
                                        Style="{StaticResource btnTemplate}"
                                        Command="{Binding ColorSettingsNewElement}"
                                        CommandParameter="{Binding ElementName=colorPickerNewElement}"
                                        Background="{Binding BackgroundNewElement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        BorderBrush="{Binding BackgroundNewElement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        >
                                    <Button.ToolTip>
                                        <ToolTip>
                                            Click me to change color
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                            </Grid>
                            <Grid Grid.Row="2">
                                <TextBlock Text="Family Type Change"
                                           HorizontalAlignment="Left"
                                           Margin="10,0,0,0"
                                           VerticalAlignment="Top" />
                                <Button x:Name="colorPickerFamilyChange"
                                    HorizontalAlignment="Left"
                                        Margin="180,0,10,0"
                                        VerticalAlignment="Top"
                                        Width="16"
                                        Height="16"
                                        Style="{StaticResource btnTemplate}"
                                        Command="{Binding ColorSettingsChangeFamilyType}"
                                        CommandParameter="{Binding ElementName=colorPickerFamilyChange}"
                                        Background="{Binding BackgroundFamilyType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        BorderBrush="{Binding BackgroundFamilyType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        >
                                    <Button.ToolTip>
                                        <ToolTip>
                                            Click me to change color
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                            </Grid>
                            <Grid Grid.Row="3">
                                <TextBlock Text="Geometry Or Location Change"
                                           HorizontalAlignment="Left"
                                           Margin="10,0,0,0"
                                           VerticalAlignment="Top" />
                                <Button x:Name="colorPickerGeo"
                                    HorizontalAlignment="Left"
                                        Margin="180,0,10,0"
                                        VerticalAlignment="Top"
                                        Width="16"
                                        Height="16"
                                        Style="{StaticResource btnTemplate}"
                                        Command="{Binding ColorSettingsChangeGeometry}"
                                        CommandParameter="{Binding ElementName=colorPickerGeo}"
                                        Background="{Binding BackgroundGeometry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        BorderBrush="{Binding BackgroundGeometry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <Button.ToolTip>
                                        <ToolTip>
                                            Click me to change color
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                            </Grid>
                            <Grid Grid.Row="4">
                                <TextBlock Text="Revit Parameters Change"
                                           HorizontalAlignment="Left"
                                           Margin="10,0,0,0"
                                           VerticalAlignment="Top" />
                                <Button x:Name="colorPickerRvtPChange"
                                    HorizontalAlignment="Left"
                                        Margin="180,0,10,0"
                                        VerticalAlignment="Top"
                                        Width="16"
                                        Height="16"
                                        Style="{StaticResource btnTemplate}"
                                        Command="{Binding ColorSettingsChangeRevitParameters}"
                                        CommandParameter="{Binding ElementName=colorPickerRvtPChange}"
                                        Background="{Binding BackgroundRevitParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        BorderBrush="{Binding BackgroundRevitParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        >
                                    <Button.ToolTip>
                                        <ToolTip>
                                            Click me to change color
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                            </Grid>
                            <Grid Grid.Row="5">
                                <TextBlock Text="Shared Parameters Change"
                                           HorizontalAlignment="Left"
                                           Margin="10,0,0,0"
                                           VerticalAlignment="Top" />
                                <Button x:Name="colorPickerSPChange"
                                    HorizontalAlignment="Left"
                                        Margin="180,0,10,0"
                                        VerticalAlignment="Top"
                                        Width="16"
                                        Height="16"
                                        Style="{StaticResource btnTemplate}"
                                        Command="{Binding ColorSettingsChangeSharedParameters}"
                                        CommandParameter="{Binding ElementName=colorPickerSPChange}"
                                        Background="{Binding BackgroundSharedParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        BorderBrush="{Binding BackgroundSharedParameters, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <Button.ToolTip>
                                        <ToolTip>
                                            Click me to change color
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                
                            </Grid>
                        </Grid>
                    </Expander>
                    <GroupBox Header="Group Elements"
                              HorizontalAlignment="Stretch"
                              Margin="5"
                              VerticalAlignment="Stretch"
                              Grid.Row="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <RadioButton x:Name="radBtnByCategory"
                                         IsChecked="True"
                                         IsEnabled="True"
                                         Content="By Category"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         IsThreeState="False"
                                         GroupName="GroupElement" />
                            <RadioButton x:Name="radBtnByTime"
                                         IsEnabled="True"
                                         Content="By Time"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         IsThreeState="False"
                                         GroupName="GroupElement"
                                         Grid.Column="1" />
                            <RadioButton x:Name="radBtnByTypeChange"
                                         IsEnabled="True"
                                         Content="By Type Change"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         IsThreeState="False"
                                         GroupName="GroupElement"
                                         Grid.Column="2" />
                        </Grid>
                    </GroupBox>
                    <Grid Grid.Row="2"
                          Grid.ColumnSpan="2">
                        <DockPanel Margin="5">
                            <TreeView x:Name="tree"
                                      ItemContainerStyle="{StaticResource TreeViewItemStyle}"
                                      ItemsSource="{Binding TreeElementsActive,Mode=TwoWay}"
                                      ItemTemplate="{StaticResource CheckBoxItemTemplate}" />
                        </DockPanel>
                    </Grid>
                    <GroupBox Header="View Options"
                              Grid.Row="3"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              Margin="5,0,5,5"
                              Grid.ColumnSpan="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <CheckBox x:Name="checkBoxHighlight"
                                      Content="Highlight Element"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding IsHighlightChecked, Mode=TwoWay}"
                                      Command="{Binding HighlightCommand}">
                            </CheckBox>
                            <CheckBox x:Name="checkBoxIsolate"
                                      Grid.Column="1"
                                      Content="Isolate Element"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding IsIsolateChecked, Mode=TwoWay}"
                                      Command="{Binding IsolateCommand}">
                            </CheckBox>
                            <CheckBox x:Name="ckxColorElement"
                                      Grid.Column="2"
                                      Content="Color Element"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding IsSectionBoxChecked}"
                                      Command="{Binding SectionboxCommand}" />
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>

            <TabItem Header="Remove Color">
                <GroupBox Header="Remove Color Elements In: "
                          HorizontalAlignment="Stretch"
                          Margin="7"
                          VerticalAlignment="Stretch">
                    <Grid>
                        <RadioButton x:Name="radioButtonVisible"
                                     IsEnabled="{Binding ElementName=radioButtonRevit, Path=IsEnabled}"
                                     Content="Model"
                                     HorizontalAlignment="Left"
                                     Margin="10,10,0,0"
                                     Grid.Row="1"
                                     VerticalAlignment="Top"
                                     GroupName="ElementOption"
                                     IsChecked="{Binding Path=SelectedOption, Converter={StaticResource OptionConverter}, ConverterParameter= OnlyVisible}" />
                        <RadioButton x:Name="radBtnViewActive"
                                     IsEnabled="{Binding ElementName=radioButtonRevit, Path=IsEnabled}"
                                     Content="Active View"
                                     HorizontalAlignment="Left"
                                     Margin="10,35,0,0"
                                     Grid.Row="1"
                                     VerticalAlignment="Top"
                                     GroupName="ElementOption"
                                     IsChecked="{Binding Path=SelectedOption, Converter={StaticResource OptionConverter}, ConverterParameter= SelectedElements}" />
                        <RadioButton x:Name="radioButtonSelected"
                                     IsEnabled="{Binding ElementName=radioButtonRevit, Path=IsEnabled}"
                                     Content="Selected Elements"
                                     HorizontalAlignment="Left"
                                     Margin="10,60,0,0"
                                     Grid.Row="1"
                                     VerticalAlignment="Top"
                                     GroupName="ElementOption"
                                     IsChecked="{Binding Path=SelectedOption, Converter={StaticResource OptionConverter}, ConverterParameter= SelectedElements}" />
                        <RadioButton x:Name="radioButtonNone"
                                     IsEnabled="{Binding ElementName=radioButtonRevit, Path=IsEnabled}"
                                     Content="Only Visible Elements"
                                     HorizontalAlignment="Left"
                                     Margin="10,85,0,0"
                                     Grid.Row="1"
                                     VerticalAlignment="Top"
                                     GroupName="ElementOption"
                                     IsChecked="{Binding Path=SelectedOption, Converter={StaticResource OptionConverter}, ConverterParameter= None}" />
                    </Grid>

                </GroupBox>
            </TabItem>
        </TabControl>
        <Button x:Name="buttonApply"
                Style="{StaticResource btnTemplate}"
                Content="Apply"
                HorizontalAlignment="Right"
                Margin="10,5,10,10"
                Grid.Row="1"
                VerticalAlignment="Top"
                Width="75"
                Height="25"
                Command="{Binding BtnApplyCommand}" />
        <Button x:Name="buttonCancel"
                Style="{StaticResource btnTemplate}"
                Content="Cancel"
                HorizontalAlignment="Right"
                Margin="0,5,90,0"
                Grid.Row="1"
                VerticalAlignment="Top"
                Width="75"
                Height="25"
               IsCancel="True" />

    </Grid>
</Window>