<Window x:Class="TrackDirect.UI.SettingTrackView"
        x:Name="TrackView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:TrackDirect.UI"
        mc:Ignorable="d"
        Title="Settings"
        Height="600"
        Width="500"
        MinHeight="500"
        MinWidth="500"
        WindowStartupLocation="CenterOwner"
        ResizeMode="CanResizeWithGrip">

    <Window.Resources>
        <!-- Button template -->
        <Style TargetType="{x:Type Button}"
               x:Key="btnTemplate">
            <Setter Property="FocusVisualStyle"
                    Value="{x:Null}" />
            <Setter Property="Background"
                    Value="#FFE6E6E6" />
            <Setter Property="BorderBrush"
                    Value="#cccccc" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Foreground"
                    Value="#333333" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="3,3,3,3" />
            <Setter Property="Margin"
                    Value="0 0 0 10">
            </Setter>
            <Setter Property="FontSize"
                    Value="11">
            </Setter>
            <Setter Property="Width"
                    Value="100">
            </Setter>
            <Setter Property="Height"
                    Value="25">
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Name="Presenter"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="#1ba1e2" />
                                <Setter Property="BorderBrush"
                                        Value="#1ba1e2" />
                                <Setter Property="Foreground"
                                        Value="#ffffff" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="#FF6BC3EE" />
                                <Setter Property="BorderBrush"
                                        Value="#FF6BC3EE" />
                                <Setter Property="Foreground"
                                        Value="#ffffff" />
                            </Trigger>
                            <Trigger Property="IsFocused"
                                     Value="true">
                                <Setter TargetName="Chrome"
                                        Property="BorderBrush"
                                        Value="#1ba1e2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style TargetType="{x:Type Button}"
               x:Key="btnTemplate2">
            <Setter Property="FocusVisualStyle"
                    Value="{x:Null}" />
            <Setter Property="Background"
                    Value="#FFE6E6E6" />
            <Setter Property="BorderBrush"
                    Value="#cccccc" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Foreground"
                    Value="#333333" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Name="Presenter"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="#1ba1e2" />
                                <Setter Property="BorderBrush"
                                        Value="#1ba1e2" />
                                <Setter Property="Foreground"
                                        Value="#ffffff" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="#FF6BC3EE" />
                                <Setter Property="BorderBrush"
                                        Value="#FF6BC3EE" />
                                <Setter Property="Foreground"
                                        Value="#ffffff" />
                            </Trigger>
                            <Trigger Property="IsFocused"
                                     Value="true">
                                <Setter TargetName="Chrome"
                                        Property="BorderBrush"
                                        Value="#1ba1e2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="HorizontalScrollViewerStyle"
               TargetType="ScrollViewer">
            <Setter Property="HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="VerticalScrollBarVisibility"
                    Value="Disabled" />
            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="True" />

        </Style>
       
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding TrackViewLoaded}"
                                   CommandParameter="{Binding ElementName=TrackView}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding TrackViewClosing}"
                                   CommandParameter="{Binding ElementName=TrackView}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition Width="200"></ColumnDefinition>
        </Grid.ColumnDefinitions>


        <!-- Group button jeu -->
        <Grid Grid.Column="1"
              HorizontalAlignment="Right"
              Margin="10 12 10 10">
            <Grid.RowDefinitions>
                <RowDefinition Height="150"></RowDefinition>
                <RowDefinition Height="120"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="50"></RowDefinition>
            </Grid.RowDefinitions>


            <GroupBox Header="AutoRun Mode"
                      HorizontalAlignment="Stretch"
                      Margin="0,30,0,0"
                      VerticalAlignment="Stretch"
                      Height="70"
                      Grid.Row="1">
                <Grid>
                    <RadioButton x:Name="radioBtnCanRun"
                                 GroupName="AutoTrack"
                                 Content="Can run"
                                 HorizontalAlignment="Left"
                                 Margin="2,10,0,0"
                                 VerticalAlignment="Top"
                                 IsChecked="{Binding CanRunAutoTrack, Mode=TwoWay}"
                                 Command="{Binding Path=RadioBtnCanRun_Checked}"
                                 CommandParameter="{Binding ElementName=radioBtnCanRun, Path=IsChecked}">
                    </RadioButton>
                    <RadioButton x:Name="radioBtnDoNotRun"
                                 GroupName="AutoTrack"
                                 Content="Don't run"
                                 HorizontalAlignment="Left"
                                 Margin="2,27,0,0"
                                 VerticalAlignment="Top"
                                 IsChecked="{Binding DoNotRunAutoTrack, Mode=TwoWay}"
                                 Command="{Binding Path=RadioBtnDoNotRun_Checked}"
                                 CommandParameter="{Binding ElementName=radioBtnDoNotRun, Path=IsChecked}">
                    </RadioButton>
                </Grid>
            </GroupBox>

            <!--Groupbox Run automatically Addin TrackChange-->
            <GroupBox Header="Run automatically"
                      HorizontalAlignment="Stretch"
                      Margin="0,30,0,0"
                      VerticalAlignment="Top"
                      Grid.Row="2">
                <Grid HorizontalAlignment="Left"
                      VerticalAlignment="Top"
                      Margin="0,0,10,10">
                    <CheckBox x:Name="ckxOnSaveProject"
                              Content="On Save Project"
                              HorizontalAlignment="Left"
                              Margin="2,10,0,0"
                              VerticalAlignment="Top"
                              IsChecked="{Binding IsAutoRunSaveProject, Mode=TwoWay}"
                              IsEnabled="{Binding CanRunAutoTrack, Mode=TwoWay}"
                              Command="{Binding Path=SaveProject_Checked}"
                              CommandParameter="{Binding ElementName=ckxOnSaveProject, Path=IsChecked}">
                    </CheckBox>
                    <CheckBox x:Name="ckxOnSynchronizeProject"
                              Content="On Synchronize Project"
                              HorizontalAlignment="Left"
                              Margin="2,30,0,0"
                              VerticalAlignment="Top"
                              IsChecked="{Binding IsAutoRunSynchroProject, Mode=TwoWay}"
                              IsEnabled="{Binding CanRunAutoTrack, Mode=OneWay}"
                              Command="{Binding Path=SynchronizeProject_Checked}"
                              CommandParameter="{Binding ElementName=ckxOnSynchronizeProject, Path=IsChecked}">
                    </CheckBox>
                    <CheckBox x:Name="ckxOnOpenProject"
                              Content="On Open Project"
                              HorizontalAlignment="Left"
                              Margin="2,50,0,0"
                              VerticalAlignment="Top"
                              IsChecked="{Binding IsAutoRunOpenProject, Mode=TwoWay}"
                              IsEnabled="{Binding CanRunAutoTrack, Mode=OneWay}"
                              Command="{Binding Path=OpenProject_Checked}"
                              CommandParameter="{Binding ElementName=ckxOnOpenProject, Path=IsChecked}">
                    </CheckBox>
                    <CheckBox x:Name="ckxOnSwitchProject"
                              Content="On Switch Project"
                              HorizontalAlignment="Left"
                              Margin="2,70,0,0"
                              VerticalAlignment="Top"
                              IsChecked="{Binding IsAutoRunSwitchProject, Mode=TwoWay}"
                              IsEnabled="{Binding CanRunAutoTrack, Mode=OneWay}"
                              Command="{Binding Path=SwitchProject_Checked}"
                              CommandParameter="{Binding ElementName=ckxOnSwitchProject, Path=IsChecked}">
                    </CheckBox>

                        <CheckBox x:Name="ckxRunByTime"
                                  Content="By Time"
                                  HorizontalAlignment="Left"
                                  Margin="2,90,0,0"
                                  VerticalAlignment="Top"
                                  IsChecked="{Binding IsAutoRunByTime, Mode=TwoWay}"
                                  IsEnabled="{Binding CanRunAutoTrack, Mode=OneWay}"
                                  Command="{Binding Path=ByTime_Checked}"
                                  CommandParameter="{Binding ElementName=ckxRunByTime, Path=IsChecked}">

                        </CheckBox>
                    <TextBox x:Name="tbxTimeOut"
                             Text="{Binding TimeOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             PreviewTextInput="NumberValidationTextBox"
                             Margin="22,110,0,0"
                             Width="30"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Top"
                             HorizontalContentAlignment="Center"
                             IsEnabled="{Binding CanRunAutoTrack, Mode=OneWay}"></TextBox>
                    <TextBlock Text="Minutes"
                               Margin="55,110,0,0"
                               IsEnabled="{Binding CanRunAutoTrack, Mode=OneWay}"></TextBlock>

                   

                </Grid>
            </GroupBox>
            <Grid Grid.Row="3"
                  VerticalAlignment="Bottom">
                <Button x:Name="buttonCancel"
                        Content="Cancel"
                        Style="{StaticResource btnTemplate}"
                        HorizontalAlignment="Right"
                        Margin="0,10,0,0"
                        VerticalAlignment="Bottom"
                        Width="75"
                        Grid.Row="1"
                        IsCancel="True" />
                <Button x:Name="buttonOk"
                        Content="Ok"
                        Style="{StaticResource btnTemplate}"
                        HorizontalAlignment="Right"
                        Margin="0,10,80,0"
                        VerticalAlignment="Bottom"
                        Width="75"
                        Grid.Row="1"
                        Command="{Binding OkCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
            </Grid>

        </Grid>

        <GroupBox HorizontalAlignment="Stretch"
                  Margin="7,20,7,7"
                  VerticalAlignment="Top"
                  Grid.Column="0">
            <GroupBox.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Model Categories (42)  -  Selected (" />
                    <TextBlock x:Name ="tblCount" Text="{Binding CountSelectedCategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Text=")" />
                </StackPanel>
            </GroupBox.Header>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="25" />
                </Grid.RowDefinitions>

                <ScrollViewer VerticalContentAlignment="Stretch"
                              Grid.Row="0"
                              Style="{StaticResource HorizontalScrollViewerStyle}">
                    <ListBox x:Name="lbxCategory"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch"
                             Margin="2,5,5,5"
                             BorderBrush="#FFCFD0D1"
                             Grid.ColumnSpan="3"
                             Grid.Column="1"
                             ItemsSource="{Binding Categories, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             SelectionMode="Extended"
                             IsTextSearchEnabled="True"
                             TextSearch.TextPath="CustomObject.StringProperty"
                             MinHeight="445"
                             >
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <CheckBox x:Name="item"
                                          Content="{Binding CategoryName}"
                                          IsChecked="{Binding Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Checked">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource  AncestorType=Window}, Path=DataContext.ItemListBox_Checked}" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Unchecked">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource  AncestorType=Window}, Path=DataContext.ItemListBox_Checked}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </CheckBox>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        
                    </ListBox>
                </ScrollViewer>
                <Grid Grid.Row="1">
                    <WrapPanel Orientation="Horizontal"
                               VerticalAlignment="Center"
                               Margin="8,0,0,0"
                               Grid.Row="1">
                        <Button x:Name="buttonAll"
                                Grid.Row="1"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Style="{StaticResource btnTemplate2}"
                                Width="18"
                                Height="18"
                                Command="{Binding BtnSelectAllCommand}"
                                Grid.Column="1">
                            <Image Width="16"
                                   Height="16"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Source="/TrackDirect;component/Images/checkbox_yes.png" />
                        </Button>
                        <Button x:Name="buttonNone"
                                Style="{StaticResource btnTemplate2}"
                                Margin="3,0,0,0"
                                Grid.Row="1"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Width="18"
                                Height="18"
                                Command="{Binding BtnSelectNoneCommand}"
                                Grid.Column="2">
                            <Image Width="16"
                                   Height="16"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Source="/TrackDirect;component/Images/checkbox_no.png" />

                        </Button>
                    </WrapPanel>
                </Grid>

            </Grid>
        </GroupBox>


    </Grid>
</Window>
